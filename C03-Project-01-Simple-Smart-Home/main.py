import time
from EdgeServer import Edge_Server
from LightDevice import Light_Device
from ACDevice import AC_Device

WAIT_TIME = 0.25

print("\nSmart Home Simulation started.")
# Creating the edge-server for the communication with the user

edge_server_1 = Edge_Server('edge_server_1')
time.sleep(WAIT_TIME)

print("******************* REGISTRATION OF THE DEVICES THROUGH SERVER *******************")

# Creating the light_device
print("\n******************* REGISTRATION OF LIGHT DEVICES INITIATED *******************")
light_device_1 = Light_Device("light_1", "Kitchen")
time.sleep(WAIT_TIME)
light_device_2 = Light_Device("light_2", "Garage")
time.sleep(WAIT_TIME)
light_device_3 = Light_Device("light_3", "BR1")
time.sleep(WAIT_TIME)
light_device_4 = Light_Device("light_4", "BR2")
time.sleep(WAIT_TIME)
light_device_5 = Light_Device("light_5", "Living")
time.sleep(WAIT_TIME)

# Creating the ac_device
print("\n******************* REGISTRATION OF AC DEVICES INITIATED *******************")
ac_device_1 = AC_Device("ac_1", "BR1")
time.sleep(WAIT_TIME)
ac_device_2 = AC_Device("ac_2", "Living")
time.sleep(WAIT_TIME)
ac_device_3 = AC_Device("ac_3", "Living")
time.sleep(WAIT_TIME)

print("\n******************* REGISTERED DEVICES ON THE SERVER *******************")
print("Fetching the list of registered devices from EdgeServer")
dev_list = edge_server_1.get_registered_device_list()
print(dev_list)

print("\n******************* GETTING THE STATUS OF THE DEVICES  *******************")

#Queury by device ids
print("\n******************* GETTING THE STATUS BY DEVICE_ID *******************")
edge_server_1.get_status("light_1")
time.sleep(WAIT_TIME)
print("Command to get status completed")
edge_server_1.get_status("light_2")
time.sleep(WAIT_TIME)
print("Command to get status completed")
edge_server_1.get_status("light_3")
time.sleep(WAIT_TIME)
print("Command to get status completed")
edge_server_1.get_status("light_4")
time.sleep(WAIT_TIME)
print("Command to get status completed")
edge_server_1.get_status("light_5")
time.sleep(WAIT_TIME)
print("Command to get status completed")
edge_server_1.get_status("ac_1")
time.sleep(WAIT_TIME)
print("Command to get status completed")
edge_server_1.get_status("ac_2")
time.sleep(WAIT_TIME)
print("Command to get status completed")
edge_server_1.get_status("ac_3")
time.sleep(WAIT_TIME)
print("Command to get status completed")

#Queury by device type
print("\n******************* GETTING THE STATUS BY DEVICE_TYPE *******************")
edge_server_1.get_status("LIGHT")
time.sleep(WAIT_TIME)
print("Command to get status completed")
edge_server_1.get_status("AC")
time.sleep(WAIT_TIME)
print("Command to get status completed")

#Queury by room type
print("\n******************* GETTING THE STATUS BY ROOM_TYPE *******************")
edge_server_1.get_status("Kitchen")
time.sleep(WAIT_TIME)
print("Command to get status completed")
edge_server_1.get_status("Garage")
time.sleep(WAIT_TIME)
print("Command to get status completed")
edge_server_1.get_status("BR1")
time.sleep(WAIT_TIME)
print("Command to get status completed")
edge_server_1.get_status("BR2")
time.sleep(WAIT_TIME)
print("Command to get status completed")
edge_server_1.get_status("Living")
time.sleep(WAIT_TIME)
print("Command to get status completed")

print("\n******************* GETTING THE STATUS BY ENTIRE_HOME *******************")
edge_server_1.get_status("devices")
time.sleep(WAIT_TIME)
print("Command to get status completed")

print("\n******************* SETTING THE SWITCH STUTUS ON *******************")

#Queury by device ids
print("\n******************* SETTING THE STATUS BY DEVICE_ID *******************")
edge_server_1.set_status("light_1", "ON")
time.sleep(WAIT_TIME)
print("Command to set status completed")
edge_server_1.set_status("light_2", "ON")
time.sleep(WAIT_TIME)
print("Command to set status completed")
edge_server_1.set_status("light_3", "ON")
time.sleep(WAIT_TIME)
print("Command to set status completed")
edge_server_1.set_status("light_4", "ON")
time.sleep(WAIT_TIME)
print("Command to set status completed")
edge_server_1.set_status("light_5", "ON")
time.sleep(WAIT_TIME)
print("Command to set status completed")
edge_server_1.set_status("ac_1", "ON")
time.sleep(WAIT_TIME)
print("Command to set status completed")
edge_server_1.set_status("ac_2", "ON")
time.sleep(WAIT_TIME)
print("Command to set status completed")
edge_server_1.set_status("ac_3", "ON")
time.sleep(WAIT_TIME)
print("Command to set status completed")

#Queury by device type
print("\n******************* SETTING THE STATUS BY DEVICE_TYPE *******************")
edge_server_1.set_status("LIGHT", "ON")
time.sleep(WAIT_TIME)
print("Command to set status completed")
edge_server_1.set_status("AC", "ON")
time.sleep(WAIT_TIME)
print("Command to set status completed")

#Queury by room type
print("\n******************* SETTING THE STATUS BY ROOM_TYPE *******************")
edge_server_1.set_status("Kitchen", "ON")
time.sleep(WAIT_TIME)
print("Command to set status completed")
edge_server_1.set_status("Garage", "ON")
time.sleep(WAIT_TIME)
print("Command to set status completed")
edge_server_1.set_status("BR1", "ON")
time.sleep(WAIT_TIME)
print("Command to set status completed")
edge_server_1.set_status("BR2", "ON")
time.sleep(WAIT_TIME)
print("Command to set status completed")
edge_server_1.set_status("Living", "ON")
time.sleep(WAIT_TIME)
print("Command to set status completed")

print("\n******************* SETTING THE STATUS BY ENTIRE_HOME *******************")
edge_server_1.set_status("devices", "ON")
time.sleep(WAIT_TIME)
print("Command to set status completed")

print("\n******************* SETTING THE LIGHT INTENSITY *******************")

#Queury by device ids
print("\n******************* SETTING THE LIGTH INTENSITY TO OFF BY DEVICE_ID *******************")
edge_server_1.set_status("light_1", intensity="OFF")
time.sleep(WAIT_TIME)
print("Command to set status completed")
edge_server_1.set_status("light_2", intensity="OFF")
time.sleep(WAIT_TIME)
print("Command to set status completed")
edge_server_1.set_status("light_3", intensity="OFF")
time.sleep(WAIT_TIME)
print("Command to set status completed")
edge_server_1.set_status("light_4", intensity="OFF")
time.sleep(WAIT_TIME)
print("Command to set status completed")
edge_server_1.set_status("light_5", intensity="OFF")
time.sleep(WAIT_TIME)
print("Command to set status completed")

#Queury by device type
print("\n******************* SETTING THE LIGHT INTENSITY TO MEDIUM BY DEVICE_TYPE *******************")
edge_server_1.set_status("LIGHT", intensity="MEDIUM")
time.sleep(WAIT_TIME)
print("Command to set status completed")

#Queury by room type
print("\n******************* SETTING THE LIGHT INTENSITY TO HIGH BY ROOM_TYPE *******************")
edge_server_1.set_status("Kitchen", intensity="HIGH")
time.sleep(WAIT_TIME)
print("Command to set status completed")
edge_server_1.set_status("Garage", intensity="HIGH")
time.sleep(WAIT_TIME)
print("Command to set status completed")
edge_server_1.set_status("BR1", intensity="HIGH")
time.sleep(WAIT_TIME)
print("Command to set status completed")
edge_server_1.set_status("BR2", intensity="HIGH")
time.sleep(WAIT_TIME)
print("Command to set status completed")
edge_server_1.set_status("Living", intensity="HIGH")
time.sleep(WAIT_TIME)
print("Command to set status completed")

print("\n******************* SETTING THE LIGHT INTENSITY TO LOW BY ENTIRE_HOME *******************")
edge_server_1.set_status("devices", intensity="LOW")
time.sleep(WAIT_TIME)
print("Command to set status completed")

print("\n******************* SETTING THE AC TEMPERATURE  *******************")

#Queury by device ids
print("\n******************* SETTING THE TEMPERATURE TO 20C BY DEVICE_ID *******************")
edge_server_1.set_status("ac_1", temperature=20)
time.sleep(WAIT_TIME)
print("Command to set status completed")
edge_server_1.set_status("ac_2", temperature=20)
time.sleep(WAIT_TIME)
print("Command to set status completed")
edge_server_1.set_status("ac_3", temperature=20)
time.sleep(WAIT_TIME)
print("Command to set status completed")

#Queury by device type
print("\n******************* SETTING THE TEMPERATURE TO 25C BY DEVICE_TYPE *******************")
edge_server_1.set_status("AC", temperature=25)
time.sleep(WAIT_TIME)
print("Command to set status completed")

#Queury by room type
print("\n******************* SETTING THE TEMPERATURE TO 28C BY ROOM_TYPE *******************")
edge_server_1.set_status("Kitchen", temperature=28)
time.sleep(WAIT_TIME)
print("Command to set status completed")
edge_server_1.set_status("Garage", temperature=28)
time.sleep(WAIT_TIME)
print("Command to set status completed")
edge_server_1.set_status("BR1", temperature=28)
time.sleep(WAIT_TIME)
print("Command to set status completed")
edge_server_1.set_status("BR2", temperature=28)
time.sleep(WAIT_TIME)
print("Command to set status completed")
edge_server_1.set_status("Living", temperature=28)
time.sleep(WAIT_TIME)
print("Command to set status completed")

print("\n******************* SETTING THE TEMPERATURE TO 18C BY ENTIRE_HOME *******************")
edge_server_1.set_status("devices", temperature=18)
time.sleep(WAIT_TIME)
print("Command to set status completed")

print("\n******************* SETTING WITH INVALID REQUESTS *******************")
edge_server_1.set_status("devices", temperature=17)
time.sleep(WAIT_TIME)
print("Command to get status completed")
edge_server_1.set_status("devices", temperature=33)
time.sleep(WAIT_TIME)
print("Command to get status completed")
edge_server_1.set_status("devices", intensity="BRIGHT")
time.sleep(WAIT_TIME)
print("Command to get status completed")


print("\n******************* CURRENT STATUS BEFORE CLOSING THE PROGRAM *******************")
edge_server_1.get_status("devices")
time.sleep(WAIT_TIME)
print("Command to get status completed")

print("\nSmart Home Simulation stopped.")
edge_server_1.terminate()
